name: Back-end CI
on: [push]

jobs:
  Collection-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'CardCollector.Net6/CardCollector.Net6'
    name: Collection-build
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
      - run: dotnet build
      - run: dotnet test
      
  Deckbuilder-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'CardCollector.Net6/CardCollector.Net6'
    name: Deckbuilder-build
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
      - run: dotnet build
      - run: dotnet test
  
  Merge-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'CardCollector.Net6/CardCollector.Net6'
    name: Merge-build
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
      - run: dotnet build
      - run: dotnet test
      
  Shop-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'CardCollector.Net6/CardCollector.Net6'
    name: Shop-build
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
      - run: dotnet build
      - run: dotnet test
  


#   docker:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: 'CardCollector.Net6'
#     steps:
#       -
#         name: Set up QEMU
#         uses: docker/setup-qemu-action@v1
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       -
#         name: Login to DockerHub
#         uses: docker/login-action@v1 
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_TOKEN }}
#       -
#         name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           file: ./Authentication/Dockerfile
#           push: true
#           tags: jensdoomen/S6-Personal:latest

      
      
  Sonarcloud:
    name: Sonarcloud
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"JensDoomen_S6-Personal-BE" /o:"jensdoomen" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
           dotnet build ./CardCollector.Net6
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
